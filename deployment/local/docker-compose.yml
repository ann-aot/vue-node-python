services:
  postgres_db:
    image: postgres:11
    restart: always
    ports:
      - "6000:5432"
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    volumes:
      - pgdata:/var/lib/postgresql/data

  api:
    build:
      dockerfile: api/Dockerfile
      context: "./../"
    image: api:latest
    depends_on:
      - postgres_db
    ports:
      - "5000:5000"
    environment:
      DB_HOST: postgres_db
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE: ${DB_DATABASE}
      DB_SCHEMA: ${DB_SCHEMA}
      DB_PORT: ${DB_PORT}
      PORT: ${NODE_API_PORT}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
      LOG_LEVEL: ${LOG_LEVEL}
  
  frontend:
    build:
      context: ../../frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_BASE_URL=${VITE_API_BASE_URL:-http://localhost:3000}
    container_name: app-frontend
    # depends_on:
    #   - backend
    env_file:
      - ./.env
    environment:
      - VITE_API_BASE_URL=${VITE_API_BASE_URL:-http://localhost:3000}
    ports:
      - "${FRONTEND_HTTP_PORT:-8080}:80"
    restart: unless-stopped

networks:
  default:
    name: app-network

volumes: 
  pgdata: