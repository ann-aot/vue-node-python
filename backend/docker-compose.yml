version: '3.8'

services:
  api:
    build: .
    container_name: fastapi-app
    ports:
      - "8300:8000"
    environment:
      - PORT=8000
      - PYTHONPATH=/app
      - DATABASE_URL=postgresql://fastapi_user:fastapi_password@postgres:5432/fastapi_db
    volumes:
      - .:/app
      - /app/__pycache__
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - fastapi-network

  postgres:
    image: postgres:15-alpine
    container_name: fastapi-postgres
    environment:
      POSTGRES_DB: fastapi_db
      POSTGRES_USER: fastapi_user
      POSTGRES_PASSWORD: fastapi_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "7432:5432"
    # volumes:
    #   - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fastapi_user -d fastapi_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - fastapi-network

networks:
  fastapi-network:
    driver: bridge

volumes:
  postgres_data: 